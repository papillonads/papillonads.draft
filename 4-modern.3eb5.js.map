{"version":3,"sources":["webpack:///./src/pattern/atom/info/NoMatch/NoMatch.props.js","webpack:///./src/pattern/atom/info/NoMatch/NoMatch.jsx","webpack:///./src/pattern/template/NotFoundTemplate/NotFoundTemplate.props.js","webpack:///./src/pattern/template/NotFoundTemplate/NotFoundTemplate.jsx","webpack:///./src/pattern/page/NotFoundPage/NotFoundPage.jsx","webpack:///./src/graphql/query.js"],"names":["noMatchPropTypes","className","string","location","object","isRequired","NoMatch","pathname","defaultProps","propTypes","notFoundTemplatePropTypes","data","NotFoundTemplate","info","name","to","homePagePath","NotFoundPage","useQuery","PAGES","pages","list","find","page","id","notFoundPageDefaultProps","notFoundPagePropTypes","gql"],"mappings":";4JAEO,MAIMA,EAAmB,CAC9BC,UAAWC,SACXC,SAAUC,SAAOC,YCLNC,EAAW,IAAD,IAAC,UAAEL,EAAF,SAAaE,GAAd,SACrB,yBAAKF,UAAWA,GACd,4CACe,8BAAOE,EAASI,aAKnCD,EAAQE,aDT2B,CACjCP,UAAW,ICUbK,EAAQG,UAAYT,ECXb,MAIMU,EAA4B,CACvCT,UAAWC,SACXS,KAAMP,SAAOC,WACbF,SAAUC,SAAOC,YCHNO,EAAoB,IAAD,IAAC,UAAEX,EAAF,KAAaU,EAAb,SAAmBR,GAApB,SAC9B,yBAAKF,UAAWA,GACd,4BAAKU,EAAKE,KAAKC,MACf,kBAACR,EAAD,CAASH,SAAUA,IACnB,kBAAC,IAAD,CAAMY,GAAIC,KAAV,wBAIJJ,EAAiBJ,aDZ2B,CAC1CP,UAAW,ICabW,EAAiBH,UAAYC,E,YChB7B,6CAMO,MAAMO,EAAgB,IAA4B,UAA5B,UAAEhB,EAAF,SAAaE,GAAe,EACvD,MAAM,KAAEQ,GAASO,YAASC,KAE1B,OAAIR,aAAJ,YAAIA,EAAMS,aAAV,aAAI,EAAaC,MAEb,yBAAKpB,UAAWA,GACd,kBAACW,EAAD,CAAkBD,KAAMA,EAAKS,MAAMC,KAAKC,KAAKC,GAAyB,cAAjBA,EAAKV,KAAKW,IAAqBrB,SAAUA,KAK7F,sCAGTc,EAAaT,aAAeiB,IAE5BR,EAAaR,UAAYiB,IAGVT,a,iUCpBR,MAAME,E,MAAQQ,GAAH,I","file":"4-modern.3eb5.js","sourcesContent":["import { string, object } from 'prop-types'\n\nexport const noMatchDefaultProps = {\n  className: '',\n}\n\nexport const noMatchPropTypes = {\n  className: string,\n  location: object.isRequired,\n}\n","import React from 'react'\nimport { noMatchDefaultProps, noMatchPropTypes } from './NoMatch.props'\n\nexport const NoMatch = ({ className, location }) => (\n  <div className={className}>\n    <h3>\n      No match for <code>{location.pathname}</code>\n    </h3>\n  </div>\n)\n\nNoMatch.defaultProps = noMatchDefaultProps\n\nNoMatch.propTypes = noMatchPropTypes\n","import { string, object } from 'prop-types'\n\nexport const notFoundTemplateDefaultProps = {\n  className: '',\n}\n\nexport const notFoundTemplatePropTypes = {\n  className: string,\n  data: object.isRequired,\n  location: object.isRequired,\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { homePagePath } from '../../../route/path'\nimport { NoMatch } from '../../atom/info/NoMatch'\nimport { notFoundTemplateDefaultProps, notFoundTemplatePropTypes } from './NotFoundTemplate.props'\n\nexport const NotFoundTemplate = ({ className, data, location }) => (\n  <div className={className}>\n    <h2>{data.info.name}</h2>\n    <NoMatch location={location} />\n    <Link to={homePagePath}> Back to Home Page</Link>\n  </div>\n)\n\nNotFoundTemplate.defaultProps = notFoundTemplateDefaultProps\n\nNotFoundTemplate.propTypes = notFoundTemplatePropTypes\n","import React from 'react'\nimport { useQuery } from '@apollo/react-hooks'\nimport { PAGES } from '../../../graphql/query'\nimport { NotFoundTemplate } from '../../template/NotFoundTemplate'\nimport { notFoundPageDefaultProps, notFoundPagePropTypes } from './NotFoundPage.props'\n\nexport const NotFoundPage = ({ className, location }) => {\n  const { data } = useQuery(PAGES)\n\n  if (data?.pages?.list) {\n    return (\n      <div className={className}>\n        <NotFoundTemplate data={data.pages.list.find(page => page.info.id === 'not-found')} location={location} />\n      </div>\n    )\n  }\n\n  return <div>test</div>\n}\n\nNotFoundPage.defaultProps = notFoundPageDefaultProps\n\nNotFoundPage.propTypes = notFoundPagePropTypes\n\n// Default export is required to use with React.lazy()\nexport default NotFoundPage\n","import gql from 'graphql-tag'\nimport { infoFragment } from '../../../server/src/data/page/home/info/fragment.graphql'\nimport { headerFragment } from '../../../server/src/data/page/home/header/fragment.graphql'\nimport { contentFragment } from '../../../server/src/data/page/home/content/fragment.graphql'\n\nexport const PAGES = gql`\n  query GetPages {\n    pages(pageSize: 10) {\n      list {\n        ...info\n        ...header\n        ...content\n      }\n    }\n  }\n\n  ${infoFragment}\n  ${headerFragment}\n  ${contentFragment}\n`\n"],"sourceRoot":""}